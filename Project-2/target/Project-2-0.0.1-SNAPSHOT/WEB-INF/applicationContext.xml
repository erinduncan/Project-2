<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:aspect="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	 https://www.springframework.org/schema/beans/spring-beans.xsd
	 http://www.springframework.org/schema/context 
	 http://www.springframework.org/schema/context/spring-context.xsd
	 http://www.springframework.org/schema/aop
	 http://www.springframework.org/schema/aop/spring-aop.xsd
	 http://www.springframework.org/schema/tx
	 http://www.springframework.org/schema/tx/spring-tx.xsd
	 ">
	 
	 <context:annotation-config/>
	 <context:component-scan base-package="com.revature"/>
	 <aspect:aspectj-autoproxy/>
	 <tx:annotation-driven/>
	 
	 
	  <bean id="datasource" 
	 	class="org.springframework.jdbc.datasource.DriverManagerDataSource">
	 		<property name="driverClassName" value="org.postgresql.Driver"/>
	 		<property name="url" 
	 			value="jdbc:postgresql://raphael-db.cy5ktaby7cw2.us-east-2.rds.amazonaws.com:5432/postgres"/>
	 		<property name="username" value="master_id"/>
	 		<property name="password" value="masterpassword"/>
	 	</bean>
	 	<bean id="sessionFactory" 
	 		class ="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
	 		<property name="dataSource" ref="datasource"/>
	 		<property name="packagesToScan" value="com.revature.models"/>
	 		<property name="hibernateProperties">
	 			<props>
	 				<prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQLDialect</prop>
	 				<prop key="hibernate.show_sql">true</prop>
	 				<prop key="hibernate.format_sql">true</prop>
	 				<prop key="hibernate.hbm2ddl.auto">none</prop>
	 				<prop key="hibernate.default_schema">testSchema</prop>
	 			</props>
	 		</property>
	 		</bean>
	 				<!-- 
			hibernate.hbm2ddl.auto =
				automatic hibernate mapping to data definition language
					create:			drops all o your existing tables and creates new ones
					validate:		checks that your schema is as expected
					update:			will not delete or drop anything, it will only add to the schema
					create-drop:	same as create, but it will drop all the tables in the event 
										of a session failure.
					none:			nothing... hibernate will not do anything to your schema
		 -->
	 		
	 		<!-- 
	 			this will manage all of your transactions.
	 			this will also manage your contextual sessions.
	 			what is a contextual session?
	 				sessions with information specific to that user.
	 				they make it so that each user only sees their information.
	 		 -->
	 		
	 		<bean id="transactionManager" 
	 			class="org.springframework.orm.hibernate5.HibernateTransactionManager">
	 			<property name="sessionFactory" ref="sessionFactory"/>
	 		</bean>
	 
	 
	 
	 </beans>
